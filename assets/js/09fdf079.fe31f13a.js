"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6658],{7478:(e,n,t)=>{t.d(n,{M:()=>r});const r={baseDockerRegistry:{value:"registry.k8s.io"},pausedImage:{value:"pause:3.9"},kubernetesBaseDomain:{value:"example.com"},clusterName:{value:"example"},kubernetesClusterDomain:{value:"${CLUSTER_NAME}.${BASE_DOMAIN}"},kuberneteBaseFolderPath:{value:"/etc/kubernetes"},kuberneteKubeletFolderPath:{value:"/var/lib/kubelet"},criEndpoint:{value:"/var/run/containerd/containerd.sock"},kubernetesServiceCIDR:{value:"29.64.0.0/16"},kubernetesDNSAddress:{value:"29.64.0.10"},kubernetesDefaultInternalAddress:{value:"29.64.0.1"},virtualMachineLocalAddress:{value:"$(ip -4 addr show scope global | awk '/inet/ {print $2; exit}' | cut -d/ -f1)"},virtualMachineFullName:{value:"${HOST_NAME}.${CLUSTER_DOMAIN}"}}},31798:(e,n,t)=>{t.d(n,{h:()=>r});const r={etcdServer:{portNumber:"2379"},etcdPeer:{portNumber:"2380"},etcdMetricServer:{portNumber:"2381"},kubeAPIServer:{portNumber:"6443"},kubeControllerManager:{portNumber:"10257"},kubeScheduler:{portNumber:"10259"},kubeletHealthz:{portNumber:"10248"},kubeletServer:{portNumber:"10250"},kubeletReadOnlyPort:{portNumber:"10255"}}},35825:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>h,default:()=>k,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"tech-docs/kubernetes/components/scheduler/staticPod","title":"staticPod","description":"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u043d\u0438\u044f","source":"@site/docs/tech-docs/kubernetes/components/scheduler/staticPod.mdx","sourceDirName":"tech-docs/kubernetes/components/scheduler","slug":"/tech-docs/kubernetes/components/scheduler/staticPod","permalink":"/infrastructure/bcloud-docs/tech-docs/kubernetes/components/scheduler/staticPod","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var s=t(74848),a=t(28453),u=t(7478),o=t(31798),c=t(63770),l=t(1775),d=t(53828);const i={},h=void 0,m={},p=[];function b(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h4",{children:"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u043d\u0438\u044f"}),"\n",(0,s.jsx)(l.A,{language:"bash",children:d.A`
    export BASE_K8S_PATH="${u.M.kuberneteBaseFolderPath.value}"
    export KUBERNETES_VERSION="${c.M.kubernetes.value}"
    export KUBE_SCHEDULER_PORT=${o.h.kubeScheduler.portNumber}
  `}),"\n",(0,s.jsx)("h4",{children:"\u0420\u0430\u0431\u043e\u0447\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f"}),"\n",(0,s.jsx)(l.A,{language:"bash",children:d.A`
      mkdir -p $\{BASE_K8S_PATH}/manifests
  `}),"\n",(0,s.jsx)("h4",{children:"\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u0430\u043d\u0438\u0444\u0435\u0441\u0442\u0430"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat <<EOF > ${BASE_K8S_PATH}/manifests/kube-scheduler.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    component: kube-scheduler\n    tier: control-plane\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-scheduler\n    - --authentication-kubeconfig=${BASE_K8S_PATH}/scheduler.conf\n    - --authorization-kubeconfig=${BASE_K8S_PATH}/scheduler.conf\n    - --bind-address=0.0.0.0\n    - --kubeconfig=${BASE_K8S_PATH}/scheduler.conf\n    - --leader-elect=true\n    image: registry.k8s.io/kube-scheduler:${KUBERNETES_VERSION}\n    imagePullPolicy: IfNotPresent\n    livenessProbe:\n      failureThreshold: 8\n      httpGet:\n        path: /healthz\n        port: ${KUBE_SCHEDULER_PORT}\n        scheme: HTTPS\n      initialDelaySeconds: 10\n      periodSeconds: 10\n      timeoutSeconds: 15\n    name: kube-scheduler\n    resources:\n      requests:\n        cpu: 100m\n    startupProbe:\n      failureThreshold: 24\n      httpGet:\n        path: /healthz\n        port: ${KUBE_SCHEDULER_PORT}\n        scheme: HTTPS\n      initialDelaySeconds: 10\n      periodSeconds: 10\n      timeoutSeconds: 15\n    volumeMounts:\n    - mountPath: ${BASE_K8S_PATH}/scheduler.conf\n      name: kubeconfig\n      readOnly: true\n  hostNetwork: true\n  priority: 2000001000\n  priorityClassName: system-node-critical\n  securityContext:\n    seccompProfile:\n      type: RuntimeDefault\n  volumes:\n  - hostPath:\n      path: ${BASE_K8S_PATH}/scheduler.conf\n      type: FileOrCreate\n    name: kubeconfig\nstatus: {}\nEOF\n"})})]})}function k(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}},63770:(e,n,t)=>{t.d(n,{M:()=>r});const r={kubernetes:{value:"v1.30.4"},etcd:{value:"3.5.12-0"},etcdctl:{value:"v3.5.5"},runc:{value:"v1.1.12"},containerd:{value:"1.7.19"},crictl:{value:"v1.30.0"}}}}]);