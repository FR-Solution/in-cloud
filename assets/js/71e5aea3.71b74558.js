"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7903],{7478:(e,t,n)=>{n.d(t,{M:()=>r});const r={baseDockerRegistry:{value:"registry.k8s.io"},pausedImage:{value:"pause:3.9"},kubernetesBaseDomain:{value:"example.com"},clusterName:{value:"example"},kubernetesClusterDomain:{value:"cluster.local"},kuberneteBaseFolderPath:{value:"/etc/kubernetes"},kubeadmBaseConfigPath:{value:"/var/run/kubeadm"},kuberneteKubeletFolderPath:{value:"/var/lib/kubelet"},criEndpoint:{value:"/var/run/containerd/containerd.sock"},kubernetesServiceCIDR:{value:"29.64.0.0/16"},kubernetesDNSAddress:{value:"29.64.0.10"},kubernetesDefaultInternalAddress:{value:"29.64.0.1"},virtualMachineLocalAddress:{value:"$(ip -4 addr show scope global | awk '/inet/ {print $2; exit}' | cut -d/ -f1)"},virtualMachineFullName:{value:"${HOST_NAME}.${CLUSTER_DOMAIN}"}}},96788:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>k,frontMatter:()=>d,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"tech-docs/kubernetes/etcd-join","title":"5.2.3.2.2 ETCD","description":"5.2.3.2.2.1. \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 ETCD","source":"@site/docs/tech-docs/kubernetes/etcdJoin.mdx","sourceDirName":"tech-docs/kubernetes","slug":"/tech-docs/kubernetes/etcd-join","permalink":"/in-cloud/tech-docs/kubernetes/etcd-join","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"etcd-join"},"sidebar":"techDocs","previous":{"title":"5.2.3.2.1. Kubelet","permalink":"/in-cloud/tech-docs/kubernetes/components/kubelet/kubelet-join-start"},"next":{"title":"5.2.4.1.1.1. Init","permalink":"/in-cloud/tech-docs/kubernetes/additionalSetup/marking-init"}}');var a=n(74848),i=n(28453),c=n(7478),o=n(1775),s=n(60513);const d={id:"etcd-join"},l="5.2.3.2.2 ETCD",u={},h=[{value:"5.2.3.2.2.1. \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 ETCD",id:"523221-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435-etcd",level:2}];function m(e){const t={admonition:"admonition",h1:"h1",h2:"h2",header:"header",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"52322-etcd",children:"5.2.3.2.2 ETCD"})}),"\n",(0,a.jsx)(t.h2,{id:"523221-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435-etcd",children:"5.2.3.2.2.1. \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 ETCD"}),"\n",(0,a.jsx)("h4",{children:"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 ETCD"}),"\n",(0,a.jsx)(o.A,{language:"bash",children:s.A`
      kubeadm join phase control-plane-join etcd --config=${c.M.kubeadmBaseConfigPath.value}/kubeadm.yaml
  `}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(o.A,{language:"bash",children:s.A`
      [preflight] Reading configuration from the cluster...
      [preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
      [etcd] Announced new etcd member joining to the existing etcd cluster
      [etcd] Creating static Pod manifest for "etcd"
      {"level":"warn","ts":"2025-02-23T14:02:01.514129Z","logger":"etcd-client","caller":"v3@v3.5.10/retry_interceptor.go:62","msg":"retrying of unary invoker failed","target":"etcd-endpoints://0xc000502fc0/83.222.26.71:2379","attempt":0,"error":"rpc error: code = FailedPrecondition desc = etcdserver: can only promote a learner member which is in sync with leader"}
      {"level":"warn","ts":"2025-02-23T14:02:02.004548Z","logger":"etcd-client","caller":"v3@v3.5.10/retry_interceptor.go:62","msg":"retrying of unary invoker failed","target":"etcd-endpoints://0xc000502fc0/83.222.26.71:2379","attempt":0,"error":"rpc error: code = FailedPrecondition desc = etcdserver: can only promote a learner member which is in sync with leader"}
      [etcd] Waiting for the new etcd member to join the cluster. This can take up to 40s
  `})})]})}function k(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);